/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef FIMC_IS_CIS_12A10_SET_A_H
#define FIMC_IS_CIS_12A10_SET_A_H

#include "fimc-is-cis.h"
#include "fimc-is-cis-12a10.h"

const u32 sensor_12a10_setfile_A_Global[] = {
	0x0103, 0x01, 0x01,
	0x0300, 0x02, 0x01,
	0x0302, 0x58, 0x01,
	0x0303, 0x00, 0x01,
	0x0304, 0x00, 0x01,
	0x0305, 0x01, 0x01,
	0x030b, 0x02, 0x01,
	0x030d, 0x64, 0x01,
	0x030e, 0x02, 0x01,
	0x0313, 0x05, 0x01,
	0x3002, 0x21, 0x01,
	0x3012, 0x40, 0x01,
	0x3013, 0x72, 0x01,
	0x3016, 0x72, 0x01,
	0x301b, 0xd0, 0x01,
	0x301d, 0xf0, 0x01,
	0x301f, 0xd0, 0x01,
	0x3021, 0x03, 0x01,
	0x3022, 0x01, 0x01,
	0x3106, 0x15, 0x01,
	0x3107, 0x23, 0x01,
	0x3500, 0x00, 0x01,
	0x3501, 0xd0, 0x01,
	0x3502, 0x00, 0x01,
	0x3505, 0x83, 0x01,
	0x3508, 0x02, 0x01,
	0x3509, 0x00, 0x01,
	0x3600, 0x43, 0x01,
	0x3611, 0x8a, 0x01,
	0x3613, 0x97, 0x01,
	0x3620, 0x80, 0x01,
	0x3624, 0x2c, 0x01,
	0x3625, 0xa0, 0x01,
	0x3626, 0x00, 0x01,
	0x3631, 0x00, 0x01,
	0x3632, 0x01, 0x01,
	0x3641, 0x80, 0x01,
	0x3642, 0x12, 0x01,
	0x3644, 0x78, 0x01,
	0x3645, 0xa7, 0x01,
	0x364e, 0x44, 0x01,
	0x364f, 0x44, 0x01,
	0x3650, 0x11, 0x01,
	0x3654, 0x00, 0x01,
	0x3657, 0x31, 0x01,
	0x3659, 0x0c, 0x01,
	0x365f, 0x07, 0x01,
	0x3661, 0x17, 0x01,
	0x3662, 0x17, 0x01,
	0x3663, 0x17, 0x01,
	0x3664, 0x17, 0x01,
	0x3666, 0x08, 0x01,
	0x366b, 0x20, 0x01,
	0x366c, 0xa4, 0x01,
	0x366d, 0x20, 0x01,
	0x366e, 0xa4, 0x01,
	0x3680, 0x00, 0x01,
	0x3714, 0x24, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x04, 0x01,
	0x3739, 0x12, 0x01,
	0x3765, 0x20, 0x01,
	0x3767, 0x00, 0x01,
	0x37a1, 0x3e, 0x01,
	0x37a8, 0x4d, 0x01,
	0x37ab, 0x2c, 0x01,
	0x37c2, 0x04, 0x01,
	0x37d8, 0x03, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e0, 0x00, 0x01,
	0x37e1, 0x0a, 0x01,
	0x37e2, 0x14, 0x01,
	0x37e3, 0x04, 0x01,
	0x37e4, 0x2a, 0x01,
	0x37e5, 0x03, 0x01,
	0x37e6, 0x04, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x00, 0x01,
	0x3804, 0x10, 0x01,
	0x3805, 0x0f, 0x01,
	0x3806, 0x0c, 0x01,
	0x3807, 0x0f, 0x01,
	0x3808, 0x10, 0x01,
	0x3809, 0x00, 0x01,
	0x380a, 0x0c, 0x01,
	0x380b, 0x00, 0x01,
	0x380c, 0x04, 0x01,
	0x380d, 0x28, 0x01,
	0x380e, 0x0d, 0x01,
	0x380f, 0x12, 0x01,
	0x3811, 0x0a, 0x01,
	0x3813, 0x08, 0x01,
	0x3814, 0x01, 0x01,
	0x3815, 0x01, 0x01,
	0x3816, 0x01, 0x01,
	0x3817, 0x01, 0x01,
	0x3820, 0xa8, 0x01,
	0x3821, 0x00, 0x01,
	0x3822, 0x81, 0x01,
	0x3823, 0x18, 0x01,
	0x3826, 0x00, 0x01,
	0x3827, 0x00, 0x01,
	0x3829, 0x03, 0x01,
	0x3832, 0x08, 0x01,
	0x3833, 0x30, 0x01,
	0x3c80, 0x00, 0x01,
	0x3c87, 0x01, 0x01,
	0x3c8c, 0x1a, 0x01,
	0x3c8d, 0x68, 0x01,
	0x3c97, 0x02, 0x01,
	0x3cc0, 0x40, 0x01,
	0x3cc1, 0x54, 0x01,
	0x3cc2, 0x34, 0x01,
	0x3cc3, 0x04, 0x01,
	0x3cc4, 0x00, 0x01,
	0x3cc5, 0x00, 0x01,
	0x3cc6, 0x00, 0x01,
	0x3cc7, 0x00, 0x01,
	0x3cc8, 0x00, 0x01,
	0x3cc9, 0x00, 0x01,
	0x3d8c, 0x73, 0x01,
	0x3d8d, 0xc0, 0x01,
	0x4001, 0x2b, 0x01,
	0x4008, 0x02, 0x01,
	0x4009, 0x0f, 0x01,
	0x4011, 0xff, 0x01,
	0x4013, 0x08, 0x01,
	0x4014, 0x08, 0x01,
	0x4015, 0x08, 0x01,
	0x4017, 0x08, 0x01,
	0x401a, 0x58, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x405e, 0x20, 0x01,
	0x4501, 0x00, 0x01,
	0x4503, 0x00, 0x01,
	0x450a, 0x04, 0x01,
	0x4601, 0x30, 0x01,
	0x4800, 0x00, 0x01,
	0x481f, 0x30, 0x01,
	0x4837, 0x0d, 0x01,
	0x483c, 0x0f, 0x01,
	0x484b, 0x01, 0x01,
	0x4d00, 0x05, 0x01,
	0x4d01, 0x19, 0x01,
	0x4d02, 0xfd, 0x01,
	0x4d03, 0xd1, 0x01,
	0x4d04, 0xff, 0x01,
	0x4d05, 0xff, 0x01,
	0x5000, 0x09, 0x01,
	0x5001, 0x42, 0x01,
	0x5002, 0x45, 0x01,
	0x5005, 0x00, 0x01,
	0x5081, 0x04, 0x01,
	0x5180, 0x00, 0x01,
	0x5181, 0x10, 0x01,
	0x5182, 0x02, 0x01,
	0x5183, 0x0f, 0x01,
	0x5185, 0x6c, 0x01,
	0x5200, 0x03, 0x01,
	0x520b, 0x07, 0x01,
	0x520c, 0x0f, 0x01,
	0x3642, 0x12, 0x01,
	0x3666, 0x08, 0x01,
	0x366b, 0x20, 0x01,
	0x366c, 0xa4, 0x01,
	0x366d, 0x20, 0x01,
	0x366e, 0xa4, 0x01,
	0x3714, 0x24, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x04, 0x01,
	0x3739, 0x12, 0x01,
	0x37c2, 0x04, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e3, 0x04, 0x01,
	0x37e4, 0x2a, 0x01,
	0x37e6, 0x04, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x00, 0x01,
	0x3804, 0x10, 0x01,
	0x3805, 0x0f, 0x01,
	0x3806, 0x0c, 0x01,
	0x3807, 0x0f, 0x01,
	0x3808, 0x10, 0x01,
	0x3809, 0x00, 0x01,
	0x380a, 0x0c, 0x01,
	0x380b, 0x00, 0x01,
	0x380e, 0x0d, 0x01,
	0x380f, 0x40, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x0a, 0x01,
	0x3813, 0x08, 0x01,
	0x3814, 0x01, 0x01,
	0x3816, 0x01, 0x01,
	0x3820, 0xa8, 0x01,
	0x4009, 0x0f, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x4501, 0x00, 0x01,
	0x5002, 0x45, 0x01,
	0x3501, 0xd0, 0x01,
	0x3502, 0x00, 0x01,
};

const u32 sensor_12a10_setfile_A_4096x3072_30fps[] = {
	0x3642, 0x12, 0x01,
	0x3666, 0x08, 0x01,
	0x366b, 0x20, 0x01,
	0x366c, 0xa4, 0x01,
	0x366d, 0x20, 0x01,
	0x366e, 0xa4, 0x01,
	0x3714, 0x24, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x04, 0x01,
	0x3739, 0x12, 0x01,
	0x37c2, 0x04, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e3, 0x04, 0x01,
	0x37e4, 0x2a, 0x01,
	0x37e6, 0x04, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x00, 0x01,
	0x3804, 0x10, 0x01,
	0x3805, 0x0f, 0x01,
	0x3806, 0x0c, 0x01,
	0x3807, 0x0f, 0x01,
	0x3808, 0x10, 0x01,
	0x3809, 0x00, 0x01,
	0x380a, 0x0c, 0x01,
	0x380b, 0x00, 0x01,
	0x380e, 0x0d, 0x01,
	0x380f, 0x40, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x0a, 0x01,
	0x3813, 0x08, 0x01,
	0x3814, 0x01, 0x01,
	0x3816, 0x01, 0x01,
	0x3820, 0xa8, 0x01,
	0x4009, 0x0f, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x4501, 0x00, 0x01,
	0x5002, 0x45, 0x01,
	0x3501, 0xd0, 0x01,
	0x3502, 0x00, 0x01,
};

const u32 sensor_12a10_setfile_A_2048x1536_60fps[] = {
	0x3642, 0x10, 0x01,
	0x3666, 0x08, 0x01,
	0x366b, 0x20, 0x01,
	0x366c, 0xa4, 0x01,
	0x366d, 0x20, 0x01,
	0x366e, 0xa4, 0x01,
	0x3714, 0x28, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x08, 0x01,
	0x3739, 0x20, 0x01,
	0x37c2, 0x14, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e3, 0x08, 0x01,
	0x37e4, 0x36, 0x01,
	0x37e6, 0x08, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x00, 0x01,
	0x3804, 0x10, 0x01,
	0x3805, 0x1f, 0x01,
	0x3806, 0x0c, 0x01,
	0x3807, 0x0f, 0x01,
	0x3808, 0x08, 0x01,
	0x3809, 0x00, 0x01,
	0x380a, 0x06, 0x01,
	0x380b, 0x00, 0x01,
	0x380e, 0x06, 0x01,
	0x380f, 0xa0, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x06, 0x01,
	0x3813, 0x04, 0x01,
	0x3814, 0x03, 0x01,
	0x3816, 0x03, 0x01,
	0x3820, 0xab, 0x01,
	0x4009, 0x0d, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x4501, 0x00, 0x01,
	0x5002, 0x45, 0x01,
	0x3501, 0x69, 0x01,
	0x3502, 0x00, 0x01,
};
#if 0
const u32 sensor_12a10_setfile_A_2000x1124_60fps[] = {
	0x3642, 0x10, 0x01,
	0x3666, 0x00, 0x01,
	0x366b, 0xa4, 0x01,
	0x366c, 0x20, 0x01,
	0x366d, 0xa4, 0x01,
	0x366e, 0x20, 0x01,
	0x3714, 0x28, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x08, 0x01,
	0x3739, 0x20, 0x01,
	0x37c2, 0x14, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e3, 0x08, 0x01,
	0x37e4, 0x36, 0x01,
	0x37e6, 0x08, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x01, 0x01,
	0x3803, 0x9c, 0x01,
	0x3804, 0x0f, 0x01,
	0x3805, 0xff, 0x01,
	0x3806, 0x0a, 0x01,
	0x3807, 0x73, 0x01,
	0x3808, 0x07, 0x01,
	0x3809, 0xd0, 0x01,
	0x380a, 0x04, 0x01,
	0x380b, 0x64, 0x01,
	0x380e, 0x06, 0x01,
	0x380f, 0xa0, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x1c, 0x01,
	0x3813, 0x04, 0x01,
	0x3814, 0x03, 0x01,
	0x3816, 0x03, 0x01,
	0x3820, 0xab, 0x01,
	0x4009, 0x0d, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x4501, 0x00, 0x01,
	0x5002, 0x45, 0x01,
	0x3501, 0x69, 0x01,
	0x3502, 0x00, 0x01,
};

const u32 sensor_12a10_setfile_A_1920x1080_60fps[] = {
	0x3642, 0x10, 0x01,
	0x3666, 0x00, 0x01,
	0x366b, 0xa4, 0x01,
	0x366c, 0x20, 0x01,
	0x366d, 0xa4, 0x01,
	0x366e, 0x20, 0x01,
	0x3714, 0x28, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x08, 0x01,
	0x3739, 0x20, 0x01,
	0x37c2, 0x14, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e3, 0x08, 0x01,
	0x37e4, 0x36, 0x01,
	0x37e6, 0x08, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x01, 0x01,
	0x3803, 0xc8, 0x01,
	0x3804, 0x0f, 0x01,
	0x3805, 0xff, 0x01,
	0x3806, 0x0a, 0x01,
	0x3807, 0x47, 0x01,
	0x3808, 0x07, 0x01,
	0x3809, 0x80, 0x01,
	0x380a, 0x04, 0x01,
	0x380b, 0x38, 0x01,
	0x380e, 0x06, 0x01,
	0x380f, 0xa0, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x44, 0x01,
	0x3813, 0x04, 0x01,
	0x3814, 0x03, 0x01,
	0x3816, 0x03, 0x01,
	0x3820, 0xab, 0x01,
	0x4009, 0x0d, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x4501, 0x00, 0x01,
	0x5002, 0x45, 0x01,
	0x3501, 0x69, 0x01,
	0x3502, 0x00, 0x01,
};
#endif
const u32 sensor_12a10_setfile_A_1280x720_120fps[] = {
	0x3642, 0x10, 0x01,
	0x3666, 0x00, 0x01,
	0x366b, 0xa4, 0x01,
	0x366c, 0x20, 0x01,
	0x366d, 0xa4, 0x01,
	0x366e, 0x20, 0x01,
	0x3714, 0x28, 0x01,
	0x371a, 0x3e, 0x01,
	0x3737, 0x08, 0x01,
	0x3739, 0x20, 0x01,
	0x37c2, 0x14, 0x01,
	0x37d9, 0x0c, 0x01,
	0x37e3, 0x08, 0x01,
	0x37e4, 0x36, 0x01,
	0x37e6, 0x08, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x03, 0x01,
	0x3803, 0x28, 0x01,
	0x3804, 0x0f, 0x01,
	0x3805, 0xff, 0x01,
	0x3806, 0x08, 0x01,
	0x3807, 0xe7, 0x01,
	0x3808, 0x05, 0x01,
	0x3809, 0x00, 0x01,
	0x380a, 0x02, 0x01,
	0x380b, 0xd0, 0x01,
	0x380e, 0x03, 0x01,
	0x380f, 0x50, 0x01,
	0x3810, 0x01, 0x01,
	0x3811, 0x84, 0x01,
	0x3813, 0x08, 0x01,
	0x3814, 0x03, 0x01,
	0x3816, 0x03, 0x01,
	0x3820, 0xab, 0x01,
	0x4009, 0x0d, 0x01,
	0x4050, 0x04, 0x01,
	0x4051, 0x0b, 0x01,
	0x4501, 0x00, 0x01,
	0x5002, 0x45, 0x01,
	0x3501, 0x34, 0x01,
	0x3502, 0x40, 0x01,
};

const struct sensor_pll_info_compact sensor_12a10_pllinfo_A_4096x3072_30fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	1144000000, /* mipi_datarate */
	108333333,	/* pclk  = VT pix CLK (this value is different by cis) */
	0x0D40, /* frame_length_lines	(0x380e) */
	0x0428, /* line_length_pck	(0x380c) */
};

const struct sensor_pll_info_compact sensor_12a10_pllinfo_A_2048x1536_60fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	1144000000, /* mipi_datarate */
	108333333,	/* pclk  = VT pix CLK (this value is different by cis) */
	0x06A0, /* frame_length_lines	(0x380e) */
	0x0428, /* line_length_pck	(0x380c) */
};
#if 0
const struct sensor_pll_info_compact sensor_12a10_pllinfo_A_2000x1124_60fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	1144000000, /* mipi_datarate */
	108333333,	/* pclk  = VT pix CLK (this value is different by cis) */
	0x06A0, /* frame_length_lines	(0x380e) */
	0x0428, /* line_length_pck	(0x380c) */
};

const struct sensor_pll_info_compact sensor_12a10_pllinfo_A_1920x1080_60fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	1144000000, /* mipi_datarate */
	108333333,	/* pclk  = VT pix CLK (this value is different by cis) */
	0x06A0, /* frame_length_lines	(0x380e) */
	0x0428, /* line_length_pck	(0x380c) */
};
#endif
const struct sensor_pll_info_compact sensor_12a10_pllinfo_A_1280x720_120fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	1144000000, /* mipi_datarate */
	108333333,	/* pclk  = VT pix CLK (this value is different by cis) */
	0x0350, /* frame_length_lines	(0x380e) */
	0x0428, /* line_length_pck	(0x380c) */
};

const struct sensor_crop_info sensor_12a10_crop_info_A_4096x3072_30fps = {
	0, /*  cal_crop_x */
	0, /*  cal_crop_y */
};
#if 0
const struct sensor_crop_info sensor_12a10_crop_info_A_2048x1536_60fps = {
	0, /*  cal_crop_x */
	0, /*  cal_crop_y */
};

const struct sensor_crop_info sensor_12a10_crop_info_A_2000x1124_60fps = {
	24, /*  cal_crop_x */
	206, /*  cal_crop_y */
};

const struct sensor_crop_info sensor_12a10_crop_info_A_1920x1080_60fps = {
	64, /*  cal_crop_x */
	228, /*  cal_crop_y */
};

const struct sensor_crop_info sensor_12a10_crop_info_A_1280x720_120fps = {
	384, /*  cal_crop_x */
	408, /*  cal_crop_y */
};
#endif
static const u32 *sensor_12a10_setfiles_A[] = {
	sensor_12a10_setfile_A_4096x3072_30fps,
	sensor_12a10_setfile_A_2048x1536_60fps,
	/*sensor_12a10_setfile_A_2000x1124_60fps,
	sensor_12a10_setfile_A_1920x1080_60fps,*/
	sensor_12a10_setfile_A_1280x720_120fps,
};

static const u32 sensor_12a10_setfile_A_sizes[] = {
	ARRAY_SIZE(sensor_12a10_setfile_A_4096x3072_30fps),
	ARRAY_SIZE(sensor_12a10_setfile_A_2048x1536_60fps),
	/*ARRAY_SIZE(sensor_12a10_setfile_A_2000x1124_60fps),
	ARRAY_SIZE(sensor_12a10_setfile_A_1920x1080_60fps),*/
	ARRAY_SIZE(sensor_12a10_setfile_A_1280x720_120fps),
};

static const struct sensor_pll_info_compact *sensor_12a10_pllinfos_A[] = {
	&sensor_12a10_pllinfo_A_4096x3072_30fps,
	&sensor_12a10_pllinfo_A_2048x1536_60fps,
	/*&sensor_12a10_pllinfo_A_2000x1124_60fps,
	&sensor_12a10_pllinfo_A_1920x1080_60fps,*/
	&sensor_12a10_pllinfo_A_1280x720_120fps,
};

static const struct sensor_crop_info *sensor_12a10_crop_infos_A[] = {
	&sensor_12a10_crop_info_A_4096x3072_30fps,
	/*&sensor_12a10_crop_info_A_2048x1536_60fps,
	&sensor_12a10_crop_info_A_2000x1124_60fps,
	&sensor_12a10_crop_info_A_1920x1080_60fps,
	&sensor_12a10_crop_info_A_1280x720_120fps,*/
};
#endif
