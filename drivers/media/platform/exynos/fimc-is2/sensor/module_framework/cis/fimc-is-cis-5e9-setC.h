/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef FIMC_IS_CIS_5E9_SET_C_H
#define FIMC_IS_CIS_5E9_SET_C_H

#include "fimc-is-cis.h"
#include "fimc-is-cis-5e9.h"

const u32 sensor_5e9_setfile_C_Global[] = {
	0x0100, 0x00, 0x1,
	0x0000, 0x04, 0x1,
	0x0000, 0x55, 0x1,
	0x0A02, 0x3F, 0x1,
	0x0100, 0x00, 0x1,
	0x3B45, 0x01, 0x1,
	0x0B05, 0x01, 0x1,
	0x392F, 0x01, 0x1,
	0x3930, 0x00, 0x1,
	0x3924, 0x7F, 0x1,
	0x3925, 0xFD, 0x1,
	0x3C08, 0xFF, 0x1,
	0x3C09, 0xFF, 0x1,
	0x3C31, 0xFF, 0x1,
	0x3C32, 0xFF, 0x1,
	0x3290, 0x10, 0x1,
	0x3200, 0x01, 0x1,
	0x3074, 0x06, 0x1,
	0x3075, 0x2F, 0x1,
	0x308A, 0x20, 0x1,
	0x308B, 0x08, 0x1,
	0x308C, 0x0B, 0x1,
	0x3081, 0x07, 0x1,
	0x307B, 0x85, 0x1,
	0x307A, 0x0A, 0x1,
	0x3079, 0x0A, 0x1,
	0x306E, 0x71, 0x1,
	0x306F, 0x28, 0x1,
	0x301F, 0x20, 0x1,
	0x3012, 0x4E, 0x1,
	0x306B, 0x9A, 0x1,
	0x3091, 0x16, 0x1,
	0x30C4, 0x06, 0x1,
	0x306A, 0x79, 0x1,
	0x30B0, 0xFF, 0x1,
	0x306D, 0x08, 0x1,
	0x3084, 0x16, 0x1,
	0x3070, 0x0F, 0x1,
	0x30C2, 0x05, 0x1,
	0x3069, 0x87, 0x1,
	0x3C0F, 0x00, 0x1,
	0x3083, 0x14, 0x1,
	0x3080, 0x08, 0x1,
	0x3C34, 0xEA, 0x1,
	0x3C35, 0x5C, 0x1,
};

/* S5K5E9_2592x1944_30fps_871Mbps_MCLK26_1109.txt */
const u32 sensor_5e9_setfile_C_2592x1944_30fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0305, 0x04, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x57, 0x1,
	0x030D, 0x04, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x86, 0x1,
	0x3C1F, 0x00, 0x1,
	0x3C17, 0x00, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x01, 0x1,
	0x0820, 0x03, 0x1,
	0x0821, 0x67, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x3929, 0x0F, 0x1,
	0x0344, 0x00, 0x1,
	0x0345, 0x08, 0x1,
	0x0346, 0x00, 0x1,
	0x0347, 0x08, 0x1,
	0x0348, 0x0A, 0x1,
	0x0349, 0x27, 0x1,
	0x034A, 0x07, 0x1,
	0x034B, 0x9F, 0x1,
	0x034C, 0x0A, 0x1,
	0x034D, 0x20, 0x1,
	0x034E, 0x07, 0x1,
	0x034F, 0x98, 0x1,
	0x0900, 0x00, 0x1,
	0x0901, 0x00, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x01, 0x1,
	0x0101, 0x00, 0x1,
	0x0340, 0x07, 0x1,
	0x0341, 0xE2, 0x1,
	0x0342, 0x0C, 0x1,
	0x0343, 0x28, 0x1,
	0x0200, 0x0B, 0x1,
	0x0201, 0x9C, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x30B8, 0x2E, 0x1,
	0x30BA, 0x36, 0x1,
	/* dual slave setting */
	/* TODO: dual slave setting */
#if 0
	0x3C02, 0x01, 0x1,
	0x3C05, 0x1D, 0x1,
	0x3500, 0x03, 0x1,
#endif
	0x3941, 0x0F, 0x1,
	0x3942, 0x3D, 0x1,
};

/* for reduce mipi speed at thermal throttling state */
const u32 sensor_5e9_setfile_C_2592x1944_15fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0305, 0x04, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x57, 0x1,
	0x030D, 0x04, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x88, 0x1,
	0x3C1F, 0x00, 0x1,
	0x3C17, 0x01, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x01, 0x1,
	0x0820, 0x01, 0x1,
	0x0821, 0xBA, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x3929, 0x0F, 0x1,
	0x0344, 0x00, 0x1,
	0x0345, 0x08, 0x1,
	0x0346, 0x00, 0x1,
	0x0347, 0x08, 0x1,
	0x0348, 0x0A, 0x1,
	0x0349, 0x27, 0x1,
	0x034A, 0x07, 0x1,
	0x034B, 0x9f, 0x1,
	0x034C, 0x0A, 0x1,
	0x034D, 0x20, 0x1,
	0x034E, 0x07, 0x1,
	0x034F, 0x98, 0x1,
	0x0900, 0x00, 0x1,
	0x0901, 0x00, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x01, 0x1,
	0x0101, 0x00, 0x1,
	0x0340, 0x07, 0x1,
	0x0341, 0xE2, 0x1,
	0x0342, 0x18, 0x1,
	0x0343, 0x50, 0x1,
	0x0200, 0x17, 0x1,
	0x0201, 0xC4, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x30B8, 0x2E, 0x1,
	0x30BA, 0x36, 0x1,
};

/* for reduce mipi speed at thermal throttling state */
const struct sensor_pll_info sensor_5e9_pllinfo_C_2592x1944_15fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	0x06, /* vt_pix_clk_div		(0x0301) */
	0x01, /* vt_sys_clk_div		(0x3C1C[7:4]) */
	0x04, /* pre_pll_clk_div	(0x0305) */
	0x57, /* pll_multiplier		(0x0306, 0x0307) */
	0x00, /* op_pix_clk_div */
	0x00, /* op_sys_clk_div */

	0x00, /* secnd_pre_pll_clk_div */
	0x00, /* secnd_pll_multiplier */
	0x07E2, /* frame_length_lines	(0x0340, 0x0341) */
	0x1850, /* line_length_pck	(0x0342, 0x0343) */
};

/* TODO: use pllinfo_compact */
const struct sensor_pll_info sensor_5e9_pllinfo_C_2592x1944_30fps = {
	EXT_CLK_Mhz * 1000 * 1000, /* ext_clk */
	0x06, /* vt_pix_clk_div		(0x0301) */
	0x01, /* vt_sys_clk_div		(0x3C1C[7:4]) */
	0x04, /* pre_pll_clk_div	(0x0305) */
	0x57, /* pll_multiplier		(0x0306, 0x0307) */
	0x00, /* op_pix_clk_div */
	0x00, /* op_sys_clk_div */

	0x00, /* secnd_pre_pll_clk_div */
	0x00, /* secnd_pll_multiplier */
	0x07E2, /* frame_length_lines	(0x0340, 0x0341) */
	0x0C28, /* line_length_pck	(0x0342, 0x0343) */
};


static const u32 *sensor_5e9_setfiles_C[] = {
	sensor_5e9_setfile_C_2592x1944_30fps,
};

static const u32 sensor_5e9_setfile_C_sizes[] = {
	ARRAY_SIZE(sensor_5e9_setfile_C_2592x1944_30fps),
};

static const struct sensor_pll_info *sensor_5e9_pllinfos_C[] = {
	&sensor_5e9_pllinfo_C_2592x1944_30fps,
};

#endif
